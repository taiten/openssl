From b4f8e3fd1f4d4e11a42865b67595249d62226bcf Mon Sep 17 00:00:00 2001
From: Tomas Mraz <tomas@openssl.org>
Date: Tue, 10 May 2022 17:22:24 +0200
Subject: [PATCH 08/11] Always try locale initialization from
 OPENSSL_strcasecmp

Fixes #18172

Reviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>
Reviewed-by: Paul Dale <pauli@openssl.org>
(Merged from https://github.com/openssl/openssl/pull/18293)

Origin: upstream, https://github.com/openssl/openssl/pull/18293
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/openssl/+bug/1974037
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1010958
Applied-Upstream: 3.0 branch (probably upcoming 3.0.4)
---
 crypto/evp/evp_lib.c        |  2 --
 crypto/init.c               |  6 ++---
 crypto/o_str.c              | 48 +++++++++++++++++++++++++++++++------
 include/internal/cryptlib.h |  1 +
 4 files changed, 45 insertions(+), 12 deletions(-)

diff --git a/crypto/evp/evp_lib.c b/crypto/evp/evp_lib.c
index d086dc94df..3711928c14 100644
--- a/crypto/evp/evp_lib.c
+++ b/crypto/evp/evp_lib.c
@@ -1172,8 +1172,6 @@ EVP_PKEY *EVP_PKEY_Q_keygen(OSSL_LIB_CTX *libctx, const char *propq,
 
     va_start(args, type);
 
-    OPENSSL_init_crypto(OPENSSL_INIT_BASE_ONLY, NULL);
-
     if (OPENSSL_strcasecmp(type, "RSA") == 0) {
         bits = va_arg(args, size_t);
         params[0] = OSSL_PARAM_construct_size_t(OSSL_PKEY_PARAM_RSA_BITS, &bits);
diff --git a/crypto/init.c b/crypto/init.c
index 1569c35a6b..447a009e38 100644
--- a/crypto/init.c
+++ b/crypto/init.c
@@ -464,9 +464,6 @@ int OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)
     uint64_t tmp;
     int aloaddone = 0;
 
-    if (!ossl_init_casecmp())
-        return 0;
-
    /* Applications depend on 0 being returned when cleanup was already done */
     if (stopped) {
         if (!(opts & OPENSSL_INIT_BASE_ONLY))
@@ -493,6 +490,9 @@ int OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)
         aloaddone = 1;
     }
 
+    if (!ossl_init_casecmp())
+        return 0;
+
     /*
      * At some point we should look at this function with a view to moving
      * most/all of this into OSSL_LIB_CTX.
diff --git a/crypto/o_str.c b/crypto/o_str.c
index f59e324cfa..789de7bd4d 100644
--- a/crypto/o_str.c
+++ b/crypto/o_str.c
@@ -18,6 +18,7 @@
 #endif
 #include <openssl/crypto.h>
 #include "internal/cryptlib.h"
+#include "internal/thread_once.h"
 
 #define DEFAULT_SEPARATOR ':'
 #define CH_ZERO '\0'
@@ -347,13 +348,36 @@ int openssl_strerror_r(int errnum, char *buf, size_t buflen)
 }
 
 #ifndef OPENSSL_NO_LOCALE
+# ifndef FIPS_MODULE
+static CRYPTO_ONCE casecmp = CRYPTO_ONCE_STATIC_INIT;
+DEFINE_RUN_ONCE_STATIC(init_casecmp)
+{
+    int ret = ossl_init_casecmp_int();
+
+    return ret;
+}
+
+int ossl_init_casecmp(void)
+{
+    if (!RUN_ONCE(&casecmp, init_casecmp))
+        return 0;
+    return 1;
+}
+# endif
+
 static locale_t loc;
 
-static locale_t ossl_c_locale(void) {
+static locale_t ossl_c_locale(void)
+{
+# ifndef FIPS_MODULE
+    if (!ossl_init_casecmp())
+        return (locale_t)0;
+# endif
     return loc;
 }
 
-int ossl_init_casecmp_int(void) {
+int ossl_init_casecmp_int(void)
+{
 # ifdef OPENSSL_SYS_WINDOWS
     loc = _create_locale(LC_COLLATE, "C");
 # else
@@ -362,9 +386,12 @@ int ossl_init_casecmp_int(void) {
     return (loc == (locale_t)0) ? 0 : 1;
 }
 
-void ossl_deinit_casecmp(void) {
-    freelocale(loc);
-    loc = (locale_t)0;
+void ossl_deinit_casecmp(void)
+{
+    if (loc != (locale_t)0) {
+        freelocale(loc);
+        loc = (locale_t)0;
+    }
 }
 
 int OPENSSL_strcasecmp(const char *s1, const char *s2)
@@ -387,11 +414,18 @@ int OPENSSL_strncasecmp(const char *s1, const char *s2, size_t n)
     return strncasecmp_l(s1, s2, n, l);
 }
 #else
-int ossl_init_casecmp_int(void) {
+int ossl_init_casecmp(void)
+{
     return 1;
 }
 
-void ossl_deinit_casecmp(void) {
+int ossl_init_casecmp_int(void)
+{
+    return 1;
+}
+
+void ossl_deinit_casecmp(void)
+{
 }
 
 int OPENSSL_strcasecmp(const char *s1, const char *s2)
diff --git a/include/internal/cryptlib.h b/include/internal/cryptlib.h
index 640b41cc10..4915680c26 100644
--- a/include/internal/cryptlib.h
+++ b/include/internal/cryptlib.h
@@ -259,5 +259,6 @@ static ossl_inline int ossl_is_absolute_path(const char *path)
 }
 
 int ossl_init_casecmp_int(void);
+int ossl_init_casecmp(void);
 void ossl_deinit_casecmp(void);
 #endif
-- 
2.34.1

