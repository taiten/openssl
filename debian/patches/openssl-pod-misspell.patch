Index: openssl-1.0.2/apps/ca.c
===================================================================
--- openssl-1.0.2.orig/apps/ca.c
+++ openssl-1.0.2/apps/ca.c
@@ -148,7 +148,7 @@
 static const char *ca_usage[] = {
     "usage: ca args\n",
     "\n",
-    " -verbose        - Talk alot while doing things\n",
+    " -verbose        - Talk a lot while doing things\n",
     " -config file    - A config file\n",
     " -name arg       - The particular CA definition to use\n",
     " -gencrl         - Generate a new CRL\n",
Index: openssl-1.0.2/crypto/evp/encode.c
===================================================================
--- openssl-1.0.2.orig/crypto/evp/encode.c
+++ openssl-1.0.2/crypto/evp/encode.c
@@ -248,7 +248,7 @@ int EVP_DecodeUpdate(EVP_ENCODE_CTX *ctx
 
     /* We parse the input data */
     for (i = 0; i < inl; i++) {
-        /* If the current line is > 80 characters, scream alot */
+        /* If the current line is > 80 characters, scream a lot */
         if (ln >= 80) {
             rv = -1;
             goto end;
Index: openssl-1.0.2/doc/apps/req.pod
===================================================================
--- openssl-1.0.2.orig/doc/apps/req.pod
+++ openssl-1.0.2/doc/apps/req.pod
@@ -159,7 +159,7 @@ B<param:file> generates a key using the
 the algorithm is determined by the parameters. B<algname:file> use algorithm
 B<algname> and parameter file B<file>: the two algorithms must match or an
 error occurs. B<algname> just uses algorithm B<algname>, and parameters,
-if neccessary should be specified via B<-pkeyopt> parameter.
+if necessary should be specified via B<-pkeyopt> parameter.
 
 B<dsa:filename> generates a DSA key using the parameters
 in the file B<filename>. B<ec:filename> generates EC key (usable both with
